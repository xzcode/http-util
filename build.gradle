	
	
	apply plugin: 'java'
	//apply plugin: 'eclipse'
	
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	
	group = "${group}"
	version = "${version}"
	
	def profile = System.getProperty("profile")
	
	repositories {
		if('test'.equals(profile)){
			maven {url "${testNexusPublicUrl}"}		
		}else {
			maven {url "${nexusPublicUrl}"}	
		}
		mavenLocal()
	}
	
	archivesBaseName =  'xz-http-util'
	
	dependencies {
	
		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
		
		compile group: 'com.google.code.gson', name: 'gson', version: "2.8.5"
		
		compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
		
	}	
	
	tasks.withType(JavaCompile) {  
		options.encoding = "UTF-8"  
	} 
		
	task sourceJar(type: Jar) {
		from sourceSets.main.allJava
	}
	
	publishing {
	    publications {
		mavenJava(MavenPublication) {
            artifactId = jar.baseName
		    from components.java
		    //groupId = 'org.gradle.sample'
		    artifact sourceJar {
			classifier "sources"
		    }
		}
	    }
	    repositories {
			if('test'.equals(profile)){
	        	maven {
		            url version.endsWith('SNAPSHOT') ? "${testNexusSnapshotsUrl}" : "${testNexusReleaseUrl}"
		            credentials {
			            username = System.getProperty("nexusUsername")
			            password = System.getProperty("nexusPassword")
			        }
		        }
	        }else {
		        maven {
		            url version.endsWith('SNAPSHOT') ? "${nexusSnapshotsUrl}" : "${nexusReleaseUrl}"
		            credentials {
			            username = nexusUsername
			            password = nexusPassword
			        }
		        }
	        }
	    }
	}
	
	
	task showEnv  { 
	
		doLast{ 
			println System.getenv()
		}
	}
	
	def getEnv(name){ 
		System.getenv()[name]
	}

